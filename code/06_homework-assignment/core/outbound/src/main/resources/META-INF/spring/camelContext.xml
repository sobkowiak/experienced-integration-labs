<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cxf="http://camel.apache.org/schema/cxf"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd   http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd   http://www.springframework.org/schema/osgi-compendium http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">
	<!-- The way properties are used changes WILDLY between deployment platforms. 
		Everything is handled automatically for you here but pay attention to running 
		on Fabric vs OpenShift vs Standalone. The way properties are used here is 
		NOT best practices for any of them and is instead a mix because it is intended 
		to demo on all of them. -->
	<!-- set property values here so we don't have to recompile to change them -->
	<osgix:cm-properties id="outboundProps"
		persistent-id="com.customer.outbound">
		<prop key="nextgate.url">/PersonEJBService/PersonEJB</prop>
	</osgix:cm-properties>
	
	<context:property-placeholder properties-ref="outboundProps" />
	
	<!-- This reference just lets all of our routes use the same connection 
		pool set up in the mq-service project -->
	<osgi:reference id="active-mq"
		interface="org.apache.camel.Component" />

	<bean id="serviceStrategy"
		class="org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy">
		<constructor-arg
			value="com.sun.mdm.index.webservice.PersonEJB" />
		<constructor-arg value="true" />
	</bean>

	<cxf:cxfEndpoint id="personEndpoint"
		address="${nextgate.url}"
		serviceClass="com.sun.mdm.index.webservice.PersonEJB">
		<cxf:properties>
			<entry key="dataFormat" value="MESSAGE" />
		</cxf:properties>
	</cxf:cxfEndpoint>


	<camelContext id="outboundSOAP" trace="false"
		typeConverterStatisticsEnabled="true"
		xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="myPropertyPlaceholder"
			location="ref:outboundProps" />

		<dataFormats>
			<soapjaxb contextPath="com.sun.mdm.index.webservice"
				elementNameStrategyRef="serviceStrategy" id="nextgateFormat" />
		</dataFormats>

		<!-- stream caching has to be enabled to process the message and log it 
			from cxf -->
		<route id="sendToNextGate" streamCache="true">
			<from uri="active-mq:q.empi.nextgate.out" />

			<log message="Message received converting..."
				loggingLevel="DEBUG" logName="com.redhat.usecase" />

			<convertBodyTo type="String" />

			<!-- <log message="Message received unmarshalling... ${body}" loggingLevel="DEBUG" 
				logName="com.redhat.usecase" /> <unmarshal ref="nextgateFormat" /> -->
			<log message="Calling WS... ${body}" loggingLevel="DEBUG"
				logName="com.redhat.usecase" />

			<to uri="cxf:bean:personEndpoint" />

			<log message="WS called!! ${body}" loggingLevel="DEBUG"
				logName="com.redhat.usecase" />

			<onException>
				<exception>java.net.ConnectException</exception>

				<redeliveryPolicy maximumRedeliveries="3" />

				<inOnly uri="active-mq:q.empi.nextgate.dlq" />
			</onException>

		</route>
	</camelContext>
</beans>
